version: '3.9'

services:
  # Redis caching service configuration
  dns-checker-cache:
    image: redis:latest  # Use the latest version of Redis
    networks:
      - main  # Connect to a network named 'main'
    deploy:
      mode: replicated  # Use replicated mode for service deployment
      replicas: 1  # Set the number of replicas to 1
      placement:
        constraints:  # Restrict service to run on specific nodes
          - "node.labels.${TONCENTER_ENV}.dns-checker==true"

  # DNS checker service configuration
  dns-checker:
    build:
      context: .  # Context directory for Docker build
      dockerfile: Dockerfile  # Path to the Dockerfile
      args:  # Build arguments
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        REACT_APP_API_KEY: ${REACT_APP_API_KEY}
    command: -c "uvicorn dnschecker.main:app --host 0.0.0.0 --port 8090"  # Command to start the service
    ports:
      - "8090:8090"  # Map container port 8090 to host port 8090
    networks:
      - main  # Connect to a network named 'main'
    secrets:  # Use Docker secrets
      - global-config
    deploy:
      mode: replicated  # Use replicated mode for service deployment
      replicas: 1  # Set the number of replicas to 1
      placement:
        constraints:  # Restrict service to run on specific nodes
          - "node.labels.${TONCENTER_ENV}.dns-checker==true"
    healthcheck:  # Health check configuration
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8090/healthcheck"]
      interval: 5s  # Interval for health checks
      timeout: 10s  # Timeout for health checks
      retries: 5  # Number of retries for health checks
      start_period: 40s  # Start period for health check

  # Frontend service configuration
  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        REACT_APP_API_KEY: ${REACT_APP_API_KEY}
    ports:
      - "3000:80"
    networks:
      - main

# Network configuration
networks:
  main:
    attachable: true  # Allow manual connection to the network
    external: false   # Not an external network

# Docker secrets configuration
secrets:
  global-config:
    file: ${TON_LITESERVER_CONFIG:-private/mainnet.json}  # File path, supports environment variables
